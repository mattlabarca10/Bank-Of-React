{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","toFixed","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","map","credit","date","slice","amount","description","id","addCredit","placeholder","Debits","debits","debit","addDebit","App","logInInfo","newUser","currentUser","updateAccountBalance","newBalance","creditList","reduce","sum","debitList","event","newCredit","length","parseFloat","Date","toISOString","prevState","newDebit","fetch","then","response","json","data","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e539b17.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\n\nclass AccountBalance extends Component {\n  // Display account balance passed from props rounded to 2 decimal places\n  render() {\n    return (\n      <div>\n        <p>Account Balance: ${this.props.accountBalance.toFixed(2)}</p>\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user};  // Create an object for state\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>);\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default LogIn;","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Credits = (props) => {\n  // Create the list of Credit items\n  const creditsView = () => {\n    const { credits } = props;\n    return credits.map((credit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each credits JSON array element\n      let date = credit.date.slice(0,10);\n      return <li key={credit.id}>{credit.amount} {credit.description} {date}</li>\n    });\n  }\n  return (\n    <div>\n      <h1>Credits</h1>\n      <AccountBalance accountBalance={props.accountBalance} />\n      {creditsView()}\n      <form onSubmit={props.addCredit}>\n        <input type=\"text\" name=\"description\" placeholder=\"description\"/>\n        <input type=\"number\" name=\"amount\" placeholder=\"amount\"/>\n        <button type=\"submit\">Add Credit</button>\n      </form>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport {Link} from 'react-router-dom';\nimport AccountBalance from './AccountBalance';\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {  // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    });\n  }\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n      <AccountBalance accountBalance={props.accountBalance} />\n      {debitsView()}\n      <form onSubmit={props.addDebit}>\n        <input type=\"text\" name=\"description\" placeholder='description'/>\n        <input type=\"number\" name=\"amount\" placeholder='amount'/>\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br/>\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n}\n\nexport default Debits;","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 0.00,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://johnnylaicode.github.io/api/credits.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ creditList: data }, this.updateAccountBalance);\n      });\n\n    fetch(\"https://johnnylaicode.github.io/api/debits.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ debitList: data }, this.updateAccountBalance);\n      });\n  }\n\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  updateAccountBalance = () => {\n    const totalCredit = this.state.creditList.reduce((sum, credit) => sum + credit.amount, 0);\n    const totalDebit = this.state.debitList.reduce((sum, debit) => sum + debit.amount, 0);\n    const newBalance = totalCredit - totalDebit;\n    this.setState({accountBalance: newBalance});\n  };\n\n  // Add a new credit\n  addCredit = (event) => {\n    event.preventDefault();\n    const newCredit = {\n      id: this.state.creditList.length + 1,\n      amount: parseFloat(event.target.amount.value),\n      description: event.target.description.value,\n      date: new Date().toISOString(),\n    };\n    this.setState((prevState) => ({\n      creditList: [...prevState.creditList, newCredit],\n    }), this.updateAccountBalance);\n  };\n\n  // Add a new debit\n  addDebit = (event) => {\n    event.preventDefault();\n    const newDebit = {\n      id: this.state.debitList.length + 1,\n      amount: parseFloat(event.target.amount.value),\n      description: event.target.description.value,\n      date: new Date().toISOString(),\n    };\n    this.setState((prevState) => ({\n      debitList: [...prevState.debitList, newDebit],\n    }), this.updateAccountBalance);\n  };\n\n  render() {  \n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredit={this.addCredit} accountBalance={this.state.accountBalance}/>) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit} accountBalance={this.state.accountBalance}/>) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/Bank-Of-React\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}